package components

import (
	"github.com/invopop/ctxi18n/i18n"
	"piggy-planner/web/icons"
)

templ Drawer() {
	<div class="drawer lg:drawer-open z-[1]" x-data="{ url: window.location.pathname }">
		<input id="my-drawer-2" type="checkbox" class="drawer-toggle"/>
		<div class="drawer-content p-8" id="main-content" :hx-get="url" hx-trigger="load once" hx-swap="innerHTML transition:true">
			<!-- Page content will be here -->
		</div>
		<!-- Sidebar -->
		<div class="drawer-side">
			<label for="my-drawer-2" aria-label="close sidebar" class="drawer-overlay"></label>
			<ul class="menu p-4 w-52 min-h-full bg-base-200 text-base-content hover:rounded-lg">
				<li class="bg-base-300 rounded-lg mb-2">
					<button class="text-xl" hx-get="/" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
						@icons.Dashboard()
						{ i18n.T(ctx, "dashboard") }
					</button>
				</li>
				<li class="bg-base-300 rounded-lg mb-2">
					<button class="text-xl" hx-get="/incomes" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
						@icons.Money()
						{ i18n.T(ctx, "incomes") }
					</button>
				</li>
				<li class="bg-base-300 rounded-lg">
					<button class="text-xl" hx-get="/expenses" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
						@icons.Payments()
						{ i18n.T(ctx, "expenses") }
					</button>
				</li>
				// <li class="bg-base-300 rounded-lg mb-2">
				// 	<button class="text-xl" hx-get="/objectives" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
				// 		@icons.Objective()
				// 		Objectives
				// 	</button>
				// </li>
				// Admin UI
				if ctx.Value("is_admin") == true {
					<div class="divider font-semibold">{ i18n.T(ctx, "admin") }</div>
					<li class="bg-base-300 rounded-lg mb-2">
						<button class="text-xl" hx-get="/users" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
							@icons.Groups()
							{ i18n.T(ctx, "users") }
						</button>
					</li>
					<li class="bg-base-300 rounded-lg mb-2">
						<button class="text-xl" hx-get="/security" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
							@icons.Security()
							{ i18n.T(ctx, "security") }
						</button>
					</li>
					<li class="bg-base-300 rounded-lg mb-2">
						<button class="text-xl" hx-get="/database" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
							@icons.Database()
							{ i18n.T(ctx, "database") }
						</button>
					</li>
					<li class="bg-base-300 rounded-lg mb-2">
						<button class="text-xl" hx-get="/requests" hx-trigger="click" hx-target="#main-content" hx-swap="innerHTML transition:true" hx-push-url="true">
							@icons.Logs()
							{ i18n.T(ctx, "requests") }
						</button>
					</li>
				}
			</ul>
		</div>
	</div>
}
